import pandas as pd


def ordenar_facturas(ruta_csv, salida_todas, salida_ultimas):
    # 1. Cargar archivo
    df = pd.read_csv(ruta_csv)

    # Normalizamos columnas (por si hay espacios en los nombres)
    df.columns = [c.strip().lower() for c in df.columns]

    # 2. Clasificamos pago vs abono
    df["tipo"] = df["número de factura"].astype(str).apply(
        lambda x: "abono" if "a" in x.lower() else "pago"
    )

    # 3. Orden inicial: pagos por fecha + número de factura
    #    Los abonos se colocarán detrás de sus pagos en la lógica de emparejamiento
    df["fecha factura"] = pd.to_datetime(df["fecha factura"], dayfirst=True, errors="coerce")

    df.sort_values(
        by=["registration", "fecha factura", "tipo", "número de factura"],
        ascending=[True, True, True, True],
        inplace=True,
    )

    # 4. Emparejar pagos con abonos
    usados = set()
    orden_final = []

    for idx, pago in df[df["tipo"] == "pago"].iterrows():
        orden_final.append(idx)

        candidatos = df[
            (df["tipo"] == "abono")
            & (df["registration"] == pago["registration"])
            & (df["cliente"] == pago["cliente"])
            & (df["importe"] == -pago["importe"])
            & (df["tax_amount"] == pago["tax_amount"])
            & (df["fecha factura"] >= pago["fecha factura"])
            & (~df.index.isin(usados))
        ]

        if not candidatos.empty:
            candidato = candidatos.sort_values("fecha factura").iloc[0]
            orden_final.append(candidato.name)
            usados.add(candidato.name)

    # 5. Añadimos abonos no emparejados (ej. pago en otro archivo)
    abonos_sueltos = df[(df["tipo"] == "abono") & (~df.index.isin(usados))]
    orden_final.extend(abonos_sueltos.index.tolist())

    # 6. Construir dataframe final en el orden correcto
    df_final = df.loc[orden_final]

    # 7. Guardar resultados
    df_final.to_csv(salida_todas, index=False)

    # 8. Crear dataframe con última factura por matrícula
    ultimas = df_final.sort_values("fecha factura").groupby("registration").tail(1)
    ultimas.to_csv(salida_ultimas, index=False)

    return df_final, ultimas


# ============================
# USO DEL SCRIPT
# ============================

facturas, ultimas = ordenar_facturas(
    ruta_csv=r"C:\Users\Fernando\Documents\facturas.csv",              # archivo original
    salida_todas=r"C:\Users\Fernando\Documents\facturas_ordenadas.csv",  # todas las facturas ordenadas
    salida_ultimas=r"C:\Users\Fernando\Documents\facturas_ultimas.csv"   # solo última por matrícula
)

print("✅ Facturas ordenadas guardadas en:", r"C:\Users\Fernando\Documents\facturas_ordenadas.csv")
print("✅ Últimas facturas por matrícula guardadas en:", r"C:\Users\Fernando\Documents\facturas_ultimas.csv")