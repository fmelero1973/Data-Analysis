import pandas as pd
import numpy as np


df = pd.DataFrame(data)

# Convertir tipos
df["INVOICE_DATE"] = pd.to_datetime(df["INVOICE_DATE"])
df["TOTAL_ITEM_VALUE"] = df["TOTAL_ITEM_VALUE"].str.replace(",", ".").astype(float)

# Crear columna "TIPO": ABONO si lleva "A", si no PAGO
df["TIPO"] = np.where(df["INVOICE_NUM"].str.contains("A", case=False), "ABONO", "PAGO")

# Ordenar por matrícula y fecha
df = df.sort_values(by=["REGISTRATION", "INVOICE_DATE"]).reset_index(drop=True)

# Crear columna auxiliar para comparar valores
df["VALOR_ABS"] = df["TOTAL_ITEM_VALUE"].abs()

# Preparar columnas de agrupación
group_cols = ["REGISTRATION", "VALOR_ABS", "COMPANY"]

# Inicializar marca de emparejamiento
df["EMPAJADO"] = False

# Lista de pares emparejados
pares = []

# Emparejar pagos y abonos
for _, grupo in df.groupby(group_cols):
    pagos = grupo[(grupo["TIPO"] == "PAGO") & (~grupo["EMPAJADO"])]
    abonos = grupo[(grupo["TIPO"] == "ABONO") & (~grupo["EMPAJADO"])]

    num_pares = min(len(pagos), len(abonos))

    if num_pares > 0:
        pagos_idx = pagos.index[:num_pares]
        abonos_idx = abonos.index[:num_pares]

        for pago_i, abono_i in zip(pagos_idx, abonos_idx):
            df.loc[pago_i, "EMPAJADO"] = True
            df.loc[abono_i, "EMPAJADO"] = True
            pares.append({
                "PAGO_NUM": df.loc[pago_i, "INVOICE_NUM"],
                "PAGO_DATE": df.loc[pago_i, "INVOICE_DATE"],
                "PAGO_VALOR": df.loc[pago_i, "TOTAL_ITEM_VALUE"],
                "ABONO_NUM": df.loc[abono_i, "INVOICE_NUM"],
                "ABONO_DATE": df.loc[abono_i, "INVOICE_DATE"],
                "ABONO_VALOR": df.loc[abono_i, "TOTAL_ITEM_VALUE"],
                "REGISTRATION": df.loc[pago_i, "REGISTRATION"],
                "COMPANY": df.loc[pago_i, "COMPANY"]
            })

# Crear DataFrame con emparejados
df_emparejados = pd.DataFrame(pares)

# Crear DataFrame con no emparejados
sin_emparejar = df[~df["EMPAJADO"]].drop(columns=["VALOR_ABS", "EMPAJADO"])

# Guardar ambos archivos Excel
df_emparejados.to_excel("facturas_emparejadas.xlsx", index=False)
sin_emparejar.to_excel("facturas_sin_emparejar.xlsx", index=False)
